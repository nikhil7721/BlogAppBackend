package com.admin.controller;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.admin.entity.CustomerEntity;
import com.admin.entity.OrderEntity;
import com.admin.entity.UserRequest;
import com.admin.entity.UserResponse;
import com.admin.entity.WasherEntity;
import com.admin.JwtUtil;
import com.admin.entity.Adminentity;
import com.admin.repository.AdminRepository;
import com.admin.service.AdminServiceImpl;





@RestController
@RequestMapping("/admin")
public class adminController {
	
	@Autowired
	private AdminRepository adminRepository;
	
	@Autowired
	private RestTemplate restTemplate;
	
	@Autowired
	private JwtUtil util;
	
	@Autowired
	private AuthenticationManager authenticationManager;
	
	@Autowired
	private AdminServiceImpl adminServiceImpl;
	
	
	@PostMapping("/addadmin")
	public ResponseEntity<String> saveuser(@RequestBody Adminentity adminentity){
		
		Integer id=adminServiceImpl.saveuser(adminentity);
		String body="Admin "+ id +" saved";
		return new ResponseEntity<String>(body,HttpStatus.OK);
	}
	
	@PostMapping("/login")
	  public ResponseEntity<UserResponse> loginUser(
			  @RequestBody UserRequest request)
	  {
			authenticationManager.authenticate(
					new UsernamePasswordAuthenticationToken(
							request.getUsername(), request.getPassword()));
			
		  String token=util.generateToken(request.getUsername());
		 return ResponseEntity.ok(new UserResponse(token,"Success! generated by nikhil"));
	  }

	
	@DeleteMapping("/deleteadmin")
	public String deleteById(@PathVariable int id) {
		adminRepository.deleteById(id);
		return "deleted with id " + id;
	}
	
	@GetMapping("/allcustomers")
	public List<CustomerEntity>getcustomer(){
		String baseurl="http://localhost:8085/customer/getcustomer";
		CustomerEntity[] getcustomer=restTemplate.getForObject(baseurl, CustomerEntity[].class);
		return Arrays.asList(getcustomer);	
	}
	
	@GetMapping("/allorders")
	public List<OrderEntity>getorders(){
		String baseurl="http://localhost:8087/order/allorders";
		OrderEntity[] getorders=restTemplate.getForObject(baseurl,OrderEntity[].class);
		return Arrays.asList(getorders);
	}
	
	@GetMapping("/allwashers")
	public List<WasherEntity>getwasher(){
		String baseurl="http://localhost:8086/washer/allwashers";
		WasherEntity[] getwasher=restTemplate.getForObject(baseurl,WasherEntity[].class);
		return Arrays.asList(getwasher);
	}
}
